// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ssip_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SSIP;

public interface COMCTRLPrx extends Ice.ObjectPrx
{
    public int pisAction(byte[] tag);

    public int pisAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pisAction(byte[] tag);

    public Ice.AsyncResult begin_pisAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pisAction(byte[] tag, Ice.Callback __cb);

    public Ice.AsyncResult begin_pisAction(byte[] tag, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_pisAction(byte[] tag, Callback_COMCTRL_pisAction __cb);

    public Ice.AsyncResult begin_pisAction(byte[] tag, java.util.Map<String, String> __ctx, Callback_COMCTRL_pisAction __cb);

    public int end_pisAction(Ice.AsyncResult __result);

    public int trainPositionAction(byte[] tag);

    public int trainPositionAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_trainPositionAction(byte[] tag);

    public Ice.AsyncResult begin_trainPositionAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_trainPositionAction(byte[] tag, Ice.Callback __cb);

    public Ice.AsyncResult begin_trainPositionAction(byte[] tag, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_trainPositionAction(byte[] tag, Callback_COMCTRL_trainPositionAction __cb);

    public Ice.AsyncResult begin_trainPositionAction(byte[] tag, java.util.Map<String, String> __ctx, Callback_COMCTRL_trainPositionAction __cb);

    public int end_trainPositionAction(Ice.AsyncResult __result);

    public int platformAction(byte[] tag);

    public int platformAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_platformAction(byte[] tag);

    public Ice.AsyncResult begin_platformAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_platformAction(byte[] tag, Ice.Callback __cb);

    public Ice.AsyncResult begin_platformAction(byte[] tag, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_platformAction(byte[] tag, Callback_COMCTRL_platformAction __cb);

    public Ice.AsyncResult begin_platformAction(byte[] tag, java.util.Map<String, String> __ctx, Callback_COMCTRL_platformAction __cb);

    public int end_platformAction(Ice.AsyncResult __result);

    public int scheduleAction(byte[] tag);

    public int scheduleAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_scheduleAction(byte[] tag);

    public Ice.AsyncResult begin_scheduleAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_scheduleAction(byte[] tag, Ice.Callback __cb);

    public Ice.AsyncResult begin_scheduleAction(byte[] tag, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_scheduleAction(byte[] tag, Callback_COMCTRL_scheduleAction __cb);

    public Ice.AsyncResult begin_scheduleAction(byte[] tag, java.util.Map<String, String> __ctx, Callback_COMCTRL_scheduleAction __cb);

    public int end_scheduleAction(Ice.AsyncResult __result);

    public int wirelessPhoneAction(byte[] tag);

    public int wirelessPhoneAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_wirelessPhoneAction(byte[] tag);

    public Ice.AsyncResult begin_wirelessPhoneAction(byte[] tag, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_wirelessPhoneAction(byte[] tag, Ice.Callback __cb);

    public Ice.AsyncResult begin_wirelessPhoneAction(byte[] tag, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_wirelessPhoneAction(byte[] tag, Callback_COMCTRL_wirelessPhoneAction __cb);

    public Ice.AsyncResult begin_wirelessPhoneAction(byte[] tag, java.util.Map<String, String> __ctx, Callback_COMCTRL_wirelessPhoneAction __cb);

    public int end_wirelessPhoneAction(Ice.AsyncResult __result);
}
