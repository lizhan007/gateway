// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ssip_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SSIP.NEWS;

public interface dms_publisherPrx extends Ice.ObjectPrx
{
    public boolean subscribe(dms_observerPrx observer, MetaTopic topic, MetaPara[] params);

    public boolean subscribe(dms_observerPrx observer, MetaTopic topic, MetaPara[] params, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_subscribe(dms_observerPrx observer, MetaTopic topic, MetaPara[] params);

    public Ice.AsyncResult begin_subscribe(dms_observerPrx observer, MetaTopic topic, MetaPara[] params, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_subscribe(dms_observerPrx observer, MetaTopic topic, MetaPara[] params, Ice.Callback __cb);

    public Ice.AsyncResult begin_subscribe(dms_observerPrx observer, MetaTopic topic, MetaPara[] params, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_subscribe(dms_observerPrx observer, MetaTopic topic, MetaPara[] params, Callback_dms_publisher_subscribe __cb);

    public Ice.AsyncResult begin_subscribe(dms_observerPrx observer, MetaTopic topic, MetaPara[] params, java.util.Map<String, String> __ctx, Callback_dms_publisher_subscribe __cb);

    public boolean end_subscribe(Ice.AsyncResult __result);

    public boolean unsubscribe(dms_observerPrx observer, int subscribeno);

    public boolean unsubscribe(dms_observerPrx observer, int subscribeno, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_unsubscribe(dms_observerPrx observer, int subscribeno);

    public Ice.AsyncResult begin_unsubscribe(dms_observerPrx observer, int subscribeno, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_unsubscribe(dms_observerPrx observer, int subscribeno, Ice.Callback __cb);

    public Ice.AsyncResult begin_unsubscribe(dms_observerPrx observer, int subscribeno, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_unsubscribe(dms_observerPrx observer, int subscribeno, Callback_dms_publisher_unsubscribe __cb);

    public Ice.AsyncResult begin_unsubscribe(dms_observerPrx observer, int subscribeno, java.util.Map<String, String> __ctx, Callback_dms_publisher_unsubscribe __cb);

    public boolean end_unsubscribe(Ice.AsyncResult __result);
}
