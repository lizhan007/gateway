// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ssip_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SSIP.NEWS;

public class MetaTopic implements Cloneable, java.io.Serializable
{
    public String topicname;

    public String domain;

    public byte no;

    public byte period;

    public String user;

    public String password;

    public MetaTopic()
    {
    }

    public MetaTopic(String topicname, String domain, byte no, byte period, String user, String password)
    {
        this.topicname = topicname;
        this.domain = domain;
        this.no = no;
        this.period = period;
        this.user = user;
        this.password = password;
    }

    public boolean
    equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MetaTopic _r = null;
        if(rhs instanceof MetaTopic)
        {
            _r = (MetaTopic)rhs;
        }

        if(_r != null)
        {
            if(topicname != _r.topicname)
            {
                if(topicname == null || _r.topicname == null || !topicname.equals(_r.topicname))
                {
                    return false;
                }
            }
            if(domain != _r.domain)
            {
                if(domain == null || _r.domain == null || !domain.equals(_r.domain))
                {
                    return false;
                }
            }
            if(no != _r.no)
            {
                return false;
            }
            if(period != _r.period)
            {
                return false;
            }
            if(user != _r.user)
            {
                if(user == null || _r.user == null || !user.equals(_r.user))
                {
                    return false;
                }
            }
            if(password != _r.password)
            {
                if(password == null || _r.password == null || !password.equals(_r.password))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::SSIP::NEWS::MetaTopic");
        __h = IceInternal.HashUtil.hashAdd(__h, topicname);
        __h = IceInternal.HashUtil.hashAdd(__h, domain);
        __h = IceInternal.HashUtil.hashAdd(__h, no);
        __h = IceInternal.HashUtil.hashAdd(__h, period);
        __h = IceInternal.HashUtil.hashAdd(__h, user);
        __h = IceInternal.HashUtil.hashAdd(__h, password);
        return __h;
    }

    public Object
    clone()
    {
        Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(topicname);
        __os.writeString(domain);
        __os.writeByte(no);
        __os.writeByte(period);
        __os.writeString(user);
        __os.writeString(password);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        topicname = __is.readString();
        domain = __is.readString();
        no = __is.readByte();
        period = __is.readByte();
        user = __is.readString();
        password = __is.readString();
    }

    public static final long serialVersionUID = 2144686157L;
}
