// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ssip_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SSIP.NEWS;

public enum NewsVarType implements java.io.Serializable
{
    
    NEWS_VT_EMPTY(0),
    
    NEWS_VT_NULL(1),
    
    NEWS_VT_UCHAR(2),
    
    NEWS_VT_CHAR(3),
    
    NEWS_VT_USHORT(4),
    
    NEWS_VT_SHORT(5),
    
    NEWS_VT_UINT(6),
    
    NEWS_VT_INT(7),
    
    NEWS_VT_ULONG(8),
    
    NEWS_VT_LONG(9),
    
    NEWS_VT_FLOAT(10),
    
    NEWS_VT_DOUBLE(11),
    
    NEWS_VT_STRING(12),
    
    NEWS_VT_BLOB(13);

    public int
    value()
    {
        return __value;
    }

    public static NewsVarType
    valueOf(int __v)
    {
        switch(__v)
        {
        case 0:
            return NEWS_VT_EMPTY;
        case 1:
            return NEWS_VT_NULL;
        case 2:
            return NEWS_VT_UCHAR;
        case 3:
            return NEWS_VT_CHAR;
        case 4:
            return NEWS_VT_USHORT;
        case 5:
            return NEWS_VT_SHORT;
        case 6:
            return NEWS_VT_UINT;
        case 7:
            return NEWS_VT_INT;
        case 8:
            return NEWS_VT_ULONG;
        case 9:
            return NEWS_VT_LONG;
        case 10:
            return NEWS_VT_FLOAT;
        case 11:
            return NEWS_VT_DOUBLE;
        case 12:
            return NEWS_VT_STRING;
        case 13:
            return NEWS_VT_BLOB;
        }
        return null;
    }

    private
    NewsVarType(int __v)
    {
        __value = __v;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeEnum(value(), 13);
    }

    public static NewsVarType
    __read(IceInternal.BasicStream __is)
    {
        int __v = __is.readEnum(13);
        return __validate(__v);
    }

    private static NewsVarType
    __validate(int __v)
    {
        final NewsVarType __e = valueOf(__v);
        if(__e == null)
        {
            throw new Ice.MarshalException("enumerator value " + __v + " is out of range");
        }
        return __e;
    }

    private final int __value;
}
