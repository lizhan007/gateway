// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dms_data.proto

package SSIP.DATA;

public final class DmsData {
    private DmsData() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }
    public interface RIP_ANA_POINTOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional int32 rtuno = 1;
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        boolean hasRtuno();
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        int getRtuno();

        // optional int32 pointno = 2;
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        boolean hasPointno();
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        int getPointno();

        // optional float value = 3;
        /**
         * <code>optional float value = 3;</code>
         */
        boolean hasValue();
        /**
         * <code>optional float value = 3;</code>
         */
        float getValue();

        // optional int32 quality = 4;
        /**
         * <code>optional int32 quality = 4;</code>
         */
        boolean hasQuality();
        /**
         * <code>optional int32 quality = 4;</code>
         */
        int getQuality();
    }
    /**
     * Protobuf type {@code SSIP.DATA.RIP_ANA_POINT}
     */
    public static final class RIP_ANA_POINT extends
            com.google.protobuf.GeneratedMessage
            implements RIP_ANA_POINTOrBuilder {
        // Use RIP_ANA_POINT.newBuilder() to construct.
        private RIP_ANA_POINT(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private RIP_ANA_POINT(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final RIP_ANA_POINT defaultInstance;
        public static RIP_ANA_POINT getDefaultInstance() {
            return defaultInstance;
        }

        public RIP_ANA_POINT getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RIP_ANA_POINT(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            rtuno_ = input.readInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            pointno_ = input.readInt32();
                            break;
                        }
                        case 29: {
                            bitField0_ |= 0x00000004;
                            value_ = input.readFloat();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            quality_ = input.readInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmsData.internal_static_SSIP_DATA_RIP_ANA_POINT_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmsData.internal_static_SSIP_DATA_RIP_ANA_POINT_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RIP_ANA_POINT.class, Builder.class);
        }

        public static com.google.protobuf.Parser<RIP_ANA_POINT> PARSER =
                new com.google.protobuf.AbstractParser<RIP_ANA_POINT>() {
                    public RIP_ANA_POINT parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new RIP_ANA_POINT(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<RIP_ANA_POINT> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional int32 rtuno = 1;
        public static final int RTUNO_FIELD_NUMBER = 1;
        private int rtuno_;
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        public boolean hasRtuno() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        public int getRtuno() {
            return rtuno_;
        }

        // optional int32 pointno = 2;
        public static final int POINTNO_FIELD_NUMBER = 2;
        private int pointno_;
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        public boolean hasPointno() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        public int getPointno() {
            return pointno_;
        }

        // optional float value = 3;
        public static final int VALUE_FIELD_NUMBER = 3;
        private float value_;
        /**
         * <code>optional float value = 3;</code>
         */
        public boolean hasValue() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float value = 3;</code>
         */
        public float getValue() {
            return value_;
        }

        // optional int32 quality = 4;
        public static final int QUALITY_FIELD_NUMBER = 4;
        private int quality_;
        /**
         * <code>optional int32 quality = 4;</code>
         */
        public boolean hasQuality() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 quality = 4;</code>
         */
        public int getQuality() {
            return quality_;
        }

        private void initFields() {
            rtuno_ = 0;
            pointno_ = 0;
            value_ = 0F;
            quality_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt32(1, rtuno_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt32(2, pointno_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeFloat(3, value_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeInt32(4, quality_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, rtuno_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, pointno_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(3, value_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(4, quality_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static RIP_ANA_POINT parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_ANA_POINT parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_ANA_POINT parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_ANA_POINT parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_ANA_POINT parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_ANA_POINT parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static RIP_ANA_POINT parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static RIP_ANA_POINT parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static RIP_ANA_POINT parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_ANA_POINT parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(RIP_ANA_POINT prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SSIP.DATA.RIP_ANA_POINT}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements RIP_ANA_POINTOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmsData.internal_static_SSIP_DATA_RIP_ANA_POINT_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmsData.internal_static_SSIP_DATA_RIP_ANA_POINT_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RIP_ANA_POINT.class, Builder.class);
            }

            // Construct using SSIP.DATA.DmsData.RIP_ANA_POINT.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                rtuno_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                pointno_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                value_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000004);
                quality_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmsData.internal_static_SSIP_DATA_RIP_ANA_POINT_descriptor;
            }

            public RIP_ANA_POINT getDefaultInstanceForType() {
                return RIP_ANA_POINT.getDefaultInstance();
            }

            public RIP_ANA_POINT build() {
                RIP_ANA_POINT result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RIP_ANA_POINT buildPartial() {
                RIP_ANA_POINT result = new RIP_ANA_POINT(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.rtuno_ = rtuno_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.pointno_ = pointno_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.value_ = value_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.quality_ = quality_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RIP_ANA_POINT) {
                    return mergeFrom((RIP_ANA_POINT)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RIP_ANA_POINT other) {
                if (other == RIP_ANA_POINT.getDefaultInstance()) return this;
                if (other.hasRtuno()) {
                    setRtuno(other.getRtuno());
                }
                if (other.hasPointno()) {
                    setPointno(other.getPointno());
                }
                if (other.hasValue()) {
                    setValue(other.getValue());
                }
                if (other.hasQuality()) {
                    setQuality(other.getQuality());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RIP_ANA_POINT parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RIP_ANA_POINT) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // optional int32 rtuno = 1;
            private int rtuno_ ;
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public boolean hasRtuno() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public int getRtuno() {
                return rtuno_;
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public Builder setRtuno(int value) {
                bitField0_ |= 0x00000001;
                rtuno_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public Builder clearRtuno() {
                bitField0_ = (bitField0_ & ~0x00000001);
                rtuno_ = 0;
                onChanged();
                return this;
            }

            // optional int32 pointno = 2;
            private int pointno_ ;
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public boolean hasPointno() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public int getPointno() {
                return pointno_;
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public Builder setPointno(int value) {
                bitField0_ |= 0x00000002;
                pointno_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public Builder clearPointno() {
                bitField0_ = (bitField0_ & ~0x00000002);
                pointno_ = 0;
                onChanged();
                return this;
            }

            // optional float value = 3;
            private float value_ ;
            /**
             * <code>optional float value = 3;</code>
             */
            public boolean hasValue() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional float value = 3;</code>
             */
            public float getValue() {
                return value_;
            }
            /**
             * <code>optional float value = 3;</code>
             */
            public Builder setValue(float value) {
                bitField0_ |= 0x00000004;
                value_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional float value = 3;</code>
             */
            public Builder clearValue() {
                bitField0_ = (bitField0_ & ~0x00000004);
                value_ = 0F;
                onChanged();
                return this;
            }

            // optional int32 quality = 4;
            private int quality_ ;
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public boolean hasQuality() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public int getQuality() {
                return quality_;
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public Builder setQuality(int value) {
                bitField0_ |= 0x00000008;
                quality_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public Builder clearQuality() {
                bitField0_ = (bitField0_ & ~0x00000008);
                quality_ = 0;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:SSIP.DATA.RIP_ANA_POINT)
        }

        static {
            defaultInstance = new RIP_ANA_POINT(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SSIP.DATA.RIP_ANA_POINT)
    }

    public interface RIP_DIG_POINTOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional int32 rtuno = 1;
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        boolean hasRtuno();
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        int getRtuno();

        // optional int32 pointno = 2;
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        boolean hasPointno();
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        int getPointno();

        // optional int32 value = 3;
        /**
         * <code>optional int32 value = 3;</code>
         */
        boolean hasValue();
        /**
         * <code>optional int32 value = 3;</code>
         */
        int getValue();

        // optional int32 quality = 4;
        /**
         * <code>optional int32 quality = 4;</code>
         */
        boolean hasQuality();
        /**
         * <code>optional int32 quality = 4;</code>
         */
        int getQuality();
    }
    /**
     * Protobuf type {@code SSIP.DATA.RIP_DIG_POINT}
     */
    public static final class RIP_DIG_POINT extends
            com.google.protobuf.GeneratedMessage
            implements RIP_DIG_POINTOrBuilder {
        // Use RIP_DIG_POINT.newBuilder() to construct.
        private RIP_DIG_POINT(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private RIP_DIG_POINT(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final RIP_DIG_POINT defaultInstance;
        public static RIP_DIG_POINT getDefaultInstance() {
            return defaultInstance;
        }

        public RIP_DIG_POINT getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RIP_DIG_POINT(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            rtuno_ = input.readInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            pointno_ = input.readInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            value_ = input.readInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            quality_ = input.readInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmsData.internal_static_SSIP_DATA_RIP_DIG_POINT_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmsData.internal_static_SSIP_DATA_RIP_DIG_POINT_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RIP_DIG_POINT.class, Builder.class);
        }

        public static com.google.protobuf.Parser<RIP_DIG_POINT> PARSER =
                new com.google.protobuf.AbstractParser<RIP_DIG_POINT>() {
                    public RIP_DIG_POINT parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new RIP_DIG_POINT(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<RIP_DIG_POINT> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional int32 rtuno = 1;
        public static final int RTUNO_FIELD_NUMBER = 1;
        private int rtuno_;
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        public boolean hasRtuno() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        public int getRtuno() {
            return rtuno_;
        }

        // optional int32 pointno = 2;
        public static final int POINTNO_FIELD_NUMBER = 2;
        private int pointno_;
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        public boolean hasPointno() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        public int getPointno() {
            return pointno_;
        }

        // optional int32 value = 3;
        public static final int VALUE_FIELD_NUMBER = 3;
        private int value_;
        /**
         * <code>optional int32 value = 3;</code>
         */
        public boolean hasValue() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 value = 3;</code>
         */
        public int getValue() {
            return value_;
        }

        // optional int32 quality = 4;
        public static final int QUALITY_FIELD_NUMBER = 4;
        private int quality_;
        /**
         * <code>optional int32 quality = 4;</code>
         */
        public boolean hasQuality() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 quality = 4;</code>
         */
        public int getQuality() {
            return quality_;
        }

        private void initFields() {
            rtuno_ = 0;
            pointno_ = 0;
            value_ = 0;
            quality_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt32(1, rtuno_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt32(2, pointno_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt32(3, value_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeInt32(4, quality_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, rtuno_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, pointno_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(3, value_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(4, quality_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static RIP_DIG_POINT parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_DIG_POINT parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_DIG_POINT parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_DIG_POINT parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_DIG_POINT parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_DIG_POINT parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static RIP_DIG_POINT parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static RIP_DIG_POINT parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static RIP_DIG_POINT parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_DIG_POINT parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(RIP_DIG_POINT prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SSIP.DATA.RIP_DIG_POINT}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements RIP_DIG_POINTOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmsData.internal_static_SSIP_DATA_RIP_DIG_POINT_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmsData.internal_static_SSIP_DATA_RIP_DIG_POINT_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RIP_DIG_POINT.class, Builder.class);
            }

            // Construct using SSIP.DATA.DmsData.RIP_DIG_POINT.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                rtuno_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                pointno_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                value_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                quality_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmsData.internal_static_SSIP_DATA_RIP_DIG_POINT_descriptor;
            }

            public RIP_DIG_POINT getDefaultInstanceForType() {
                return RIP_DIG_POINT.getDefaultInstance();
            }

            public RIP_DIG_POINT build() {
                RIP_DIG_POINT result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RIP_DIG_POINT buildPartial() {
                RIP_DIG_POINT result = new RIP_DIG_POINT(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.rtuno_ = rtuno_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.pointno_ = pointno_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.value_ = value_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.quality_ = quality_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RIP_DIG_POINT) {
                    return mergeFrom((RIP_DIG_POINT)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RIP_DIG_POINT other) {
                if (other == RIP_DIG_POINT.getDefaultInstance()) return this;
                if (other.hasRtuno()) {
                    setRtuno(other.getRtuno());
                }
                if (other.hasPointno()) {
                    setPointno(other.getPointno());
                }
                if (other.hasValue()) {
                    setValue(other.getValue());
                }
                if (other.hasQuality()) {
                    setQuality(other.getQuality());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RIP_DIG_POINT parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RIP_DIG_POINT) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // optional int32 rtuno = 1;
            private int rtuno_ ;
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public boolean hasRtuno() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public int getRtuno() {
                return rtuno_;
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public Builder setRtuno(int value) {
                bitField0_ |= 0x00000001;
                rtuno_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public Builder clearRtuno() {
                bitField0_ = (bitField0_ & ~0x00000001);
                rtuno_ = 0;
                onChanged();
                return this;
            }

            // optional int32 pointno = 2;
            private int pointno_ ;
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public boolean hasPointno() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public int getPointno() {
                return pointno_;
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public Builder setPointno(int value) {
                bitField0_ |= 0x00000002;
                pointno_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public Builder clearPointno() {
                bitField0_ = (bitField0_ & ~0x00000002);
                pointno_ = 0;
                onChanged();
                return this;
            }

            // optional int32 value = 3;
            private int value_ ;
            /**
             * <code>optional int32 value = 3;</code>
             */
            public boolean hasValue() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional int32 value = 3;</code>
             */
            public int getValue() {
                return value_;
            }
            /**
             * <code>optional int32 value = 3;</code>
             */
            public Builder setValue(int value) {
                bitField0_ |= 0x00000004;
                value_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 value = 3;</code>
             */
            public Builder clearValue() {
                bitField0_ = (bitField0_ & ~0x00000004);
                value_ = 0;
                onChanged();
                return this;
            }

            // optional int32 quality = 4;
            private int quality_ ;
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public boolean hasQuality() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public int getQuality() {
                return quality_;
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public Builder setQuality(int value) {
                bitField0_ |= 0x00000008;
                quality_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public Builder clearQuality() {
                bitField0_ = (bitField0_ & ~0x00000008);
                quality_ = 0;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:SSIP.DATA.RIP_DIG_POINT)
        }

        static {
            defaultInstance = new RIP_DIG_POINT(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SSIP.DATA.RIP_DIG_POINT)
    }

    public interface RIP_ACC_POINTOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional int32 rtuno = 1;
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        boolean hasRtuno();
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        int getRtuno();

        // optional int32 pointno = 2;
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        boolean hasPointno();
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        int getPointno();

        // optional int32 value = 3;
        /**
         * <code>optional int32 value = 3;</code>
         */
        boolean hasValue();
        /**
         * <code>optional int32 value = 3;</code>
         */
        int getValue();

        // optional int32 quality = 4;
        /**
         * <code>optional int32 quality = 4;</code>
         */
        boolean hasQuality();
        /**
         * <code>optional int32 quality = 4;</code>
         */
        int getQuality();
    }
    /**
     * Protobuf type {@code SSIP.DATA.RIP_ACC_POINT}
     */
    public static final class RIP_ACC_POINT extends
            com.google.protobuf.GeneratedMessage
            implements RIP_ACC_POINTOrBuilder {
        // Use RIP_ACC_POINT.newBuilder() to construct.
        private RIP_ACC_POINT(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private RIP_ACC_POINT(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final RIP_ACC_POINT defaultInstance;
        public static RIP_ACC_POINT getDefaultInstance() {
            return defaultInstance;
        }

        public RIP_ACC_POINT getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RIP_ACC_POINT(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            rtuno_ = input.readInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            pointno_ = input.readInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            value_ = input.readInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            quality_ = input.readInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmsData.internal_static_SSIP_DATA_RIP_ACC_POINT_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmsData.internal_static_SSIP_DATA_RIP_ACC_POINT_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RIP_ACC_POINT.class, Builder.class);
        }

        public static com.google.protobuf.Parser<RIP_ACC_POINT> PARSER =
                new com.google.protobuf.AbstractParser<RIP_ACC_POINT>() {
                    public RIP_ACC_POINT parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new RIP_ACC_POINT(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<RIP_ACC_POINT> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional int32 rtuno = 1;
        public static final int RTUNO_FIELD_NUMBER = 1;
        private int rtuno_;
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        public boolean hasRtuno() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 rtuno = 1;</code>
         */
        public int getRtuno() {
            return rtuno_;
        }

        // optional int32 pointno = 2;
        public static final int POINTNO_FIELD_NUMBER = 2;
        private int pointno_;
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        public boolean hasPointno() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 pointno = 2;</code>
         */
        public int getPointno() {
            return pointno_;
        }

        // optional int32 value = 3;
        public static final int VALUE_FIELD_NUMBER = 3;
        private int value_;
        /**
         * <code>optional int32 value = 3;</code>
         */
        public boolean hasValue() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 value = 3;</code>
         */
        public int getValue() {
            return value_;
        }

        // optional int32 quality = 4;
        public static final int QUALITY_FIELD_NUMBER = 4;
        private int quality_;
        /**
         * <code>optional int32 quality = 4;</code>
         */
        public boolean hasQuality() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 quality = 4;</code>
         */
        public int getQuality() {
            return quality_;
        }

        private void initFields() {
            rtuno_ = 0;
            pointno_ = 0;
            value_ = 0;
            quality_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt32(1, rtuno_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt32(2, pointno_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt32(3, value_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeInt32(4, quality_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, rtuno_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, pointno_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(3, value_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(4, quality_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static RIP_ACC_POINT parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_ACC_POINT parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_ACC_POINT parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_ACC_POINT parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_ACC_POINT parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_ACC_POINT parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static RIP_ACC_POINT parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static RIP_ACC_POINT parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static RIP_ACC_POINT parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_ACC_POINT parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(RIP_ACC_POINT prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SSIP.DATA.RIP_ACC_POINT}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements RIP_ACC_POINTOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmsData.internal_static_SSIP_DATA_RIP_ACC_POINT_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmsData.internal_static_SSIP_DATA_RIP_ACC_POINT_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RIP_ACC_POINT.class, Builder.class);
            }

            // Construct using SSIP.DATA.DmsData.RIP_ACC_POINT.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                rtuno_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                pointno_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                value_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                quality_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmsData.internal_static_SSIP_DATA_RIP_ACC_POINT_descriptor;
            }

            public RIP_ACC_POINT getDefaultInstanceForType() {
                return RIP_ACC_POINT.getDefaultInstance();
            }

            public RIP_ACC_POINT build() {
                RIP_ACC_POINT result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RIP_ACC_POINT buildPartial() {
                RIP_ACC_POINT result = new RIP_ACC_POINT(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.rtuno_ = rtuno_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.pointno_ = pointno_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.value_ = value_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.quality_ = quality_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RIP_ACC_POINT) {
                    return mergeFrom((RIP_ACC_POINT)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RIP_ACC_POINT other) {
                if (other == RIP_ACC_POINT.getDefaultInstance()) return this;
                if (other.hasRtuno()) {
                    setRtuno(other.getRtuno());
                }
                if (other.hasPointno()) {
                    setPointno(other.getPointno());
                }
                if (other.hasValue()) {
                    setValue(other.getValue());
                }
                if (other.hasQuality()) {
                    setQuality(other.getQuality());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RIP_ACC_POINT parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RIP_ACC_POINT) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // optional int32 rtuno = 1;
            private int rtuno_ ;
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public boolean hasRtuno() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public int getRtuno() {
                return rtuno_;
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public Builder setRtuno(int value) {
                bitField0_ |= 0x00000001;
                rtuno_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 rtuno = 1;</code>
             */
            public Builder clearRtuno() {
                bitField0_ = (bitField0_ & ~0x00000001);
                rtuno_ = 0;
                onChanged();
                return this;
            }

            // optional int32 pointno = 2;
            private int pointno_ ;
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public boolean hasPointno() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public int getPointno() {
                return pointno_;
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public Builder setPointno(int value) {
                bitField0_ |= 0x00000002;
                pointno_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 pointno = 2;</code>
             */
            public Builder clearPointno() {
                bitField0_ = (bitField0_ & ~0x00000002);
                pointno_ = 0;
                onChanged();
                return this;
            }

            // optional int32 value = 3;
            private int value_ ;
            /**
             * <code>optional int32 value = 3;</code>
             */
            public boolean hasValue() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional int32 value = 3;</code>
             */
            public int getValue() {
                return value_;
            }
            /**
             * <code>optional int32 value = 3;</code>
             */
            public Builder setValue(int value) {
                bitField0_ |= 0x00000004;
                value_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 value = 3;</code>
             */
            public Builder clearValue() {
                bitField0_ = (bitField0_ & ~0x00000004);
                value_ = 0;
                onChanged();
                return this;
            }

            // optional int32 quality = 4;
            private int quality_ ;
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public boolean hasQuality() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public int getQuality() {
                return quality_;
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public Builder setQuality(int value) {
                bitField0_ |= 0x00000008;
                quality_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 quality = 4;</code>
             */
            public Builder clearQuality() {
                bitField0_ = (bitField0_ & ~0x00000008);
                quality_ = 0;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:SSIP.DATA.RIP_ACC_POINT)
        }

        static {
            defaultInstance = new RIP_ACC_POINT(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SSIP.DATA.RIP_ACC_POINT)
    }

    public interface RIP_ANA_LISTOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        java.util.List<RIP_ANA_POINT>
        getPointlistList();
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        RIP_ANA_POINT getPointlist(int index);
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        int getPointlistCount();
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        java.util.List<? extends RIP_ANA_POINTOrBuilder>
        getPointlistOrBuilderList();
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        RIP_ANA_POINTOrBuilder getPointlistOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code SSIP.DATA.RIP_ANA_LIST}
     */
    public static final class RIP_ANA_LIST extends
            com.google.protobuf.GeneratedMessage
            implements RIP_ANA_LISTOrBuilder {
        // Use RIP_ANA_LIST.newBuilder() to construct.
        private RIP_ANA_LIST(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private RIP_ANA_LIST(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final RIP_ANA_LIST defaultInstance;
        public static RIP_ANA_LIST getDefaultInstance() {
            return defaultInstance;
        }

        public RIP_ANA_LIST getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RIP_ANA_LIST(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                pointlist_ = new java.util.ArrayList<RIP_ANA_POINT>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            pointlist_.add(input.readMessage(RIP_ANA_POINT.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    pointlist_ = java.util.Collections.unmodifiableList(pointlist_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmsData.internal_static_SSIP_DATA_RIP_ANA_LIST_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmsData.internal_static_SSIP_DATA_RIP_ANA_LIST_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RIP_ANA_LIST.class, Builder.class);
        }

        public static com.google.protobuf.Parser<RIP_ANA_LIST> PARSER =
                new com.google.protobuf.AbstractParser<RIP_ANA_LIST>() {
                    public RIP_ANA_LIST parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new RIP_ANA_LIST(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<RIP_ANA_LIST> getParserForType() {
            return PARSER;
        }

        // repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;
        public static final int POINTLIST_FIELD_NUMBER = 1;
        private java.util.List<RIP_ANA_POINT> pointlist_;
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        public java.util.List<RIP_ANA_POINT> getPointlistList() {
            return pointlist_;
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        public java.util.List<? extends RIP_ANA_POINTOrBuilder>
        getPointlistOrBuilderList() {
            return pointlist_;
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        public int getPointlistCount() {
            return pointlist_.size();
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        public RIP_ANA_POINT getPointlist(int index) {
            return pointlist_.get(index);
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
         */
        public RIP_ANA_POINTOrBuilder getPointlistOrBuilder(
                int index) {
            return pointlist_.get(index);
        }

        private void initFields() {
            pointlist_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < pointlist_.size(); i++) {
                output.writeMessage(1, pointlist_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < pointlist_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, pointlist_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static RIP_ANA_LIST parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_ANA_LIST parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_ANA_LIST parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_ANA_LIST parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_ANA_LIST parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_ANA_LIST parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static RIP_ANA_LIST parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static RIP_ANA_LIST parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static RIP_ANA_LIST parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_ANA_LIST parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(RIP_ANA_LIST prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SSIP.DATA.RIP_ANA_LIST}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements RIP_ANA_LISTOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmsData.internal_static_SSIP_DATA_RIP_ANA_LIST_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmsData.internal_static_SSIP_DATA_RIP_ANA_LIST_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RIP_ANA_LIST.class, Builder.class);
            }

            // Construct using SSIP.DATA.DmsData.RIP_ANA_LIST.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getPointlistFieldBuilder();
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (pointlistBuilder_ == null) {
                    pointlist_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    pointlistBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmsData.internal_static_SSIP_DATA_RIP_ANA_LIST_descriptor;
            }

            public RIP_ANA_LIST getDefaultInstanceForType() {
                return RIP_ANA_LIST.getDefaultInstance();
            }

            public RIP_ANA_LIST build() {
                RIP_ANA_LIST result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RIP_ANA_LIST buildPartial() {
                RIP_ANA_LIST result = new RIP_ANA_LIST(this);
                int from_bitField0_ = bitField0_;
                if (pointlistBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        pointlist_ = java.util.Collections.unmodifiableList(pointlist_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.pointlist_ = pointlist_;
                } else {
                    result.pointlist_ = pointlistBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RIP_ANA_LIST) {
                    return mergeFrom((RIP_ANA_LIST)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RIP_ANA_LIST other) {
                if (other == RIP_ANA_LIST.getDefaultInstance()) return this;
                if (pointlistBuilder_ == null) {
                    if (!other.pointlist_.isEmpty()) {
                        if (pointlist_.isEmpty()) {
                            pointlist_ = other.pointlist_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePointlistIsMutable();
                            pointlist_.addAll(other.pointlist_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.pointlist_.isEmpty()) {
                        if (pointlistBuilder_.isEmpty()) {
                            pointlistBuilder_.dispose();
                            pointlistBuilder_ = null;
                            pointlist_ = other.pointlist_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            pointlistBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getPointlistFieldBuilder() : null;
                        } else {
                            pointlistBuilder_.addAllMessages(other.pointlist_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RIP_ANA_LIST parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RIP_ANA_LIST) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;
            private java.util.List<RIP_ANA_POINT> pointlist_ =
                    java.util.Collections.emptyList();
            private void ensurePointlistIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    pointlist_ = new java.util.ArrayList<RIP_ANA_POINT>(pointlist_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    RIP_ANA_POINT, RIP_ANA_POINT.Builder, RIP_ANA_POINTOrBuilder> pointlistBuilder_;

            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public java.util.List<RIP_ANA_POINT> getPointlistList() {
                if (pointlistBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(pointlist_);
                } else {
                    return pointlistBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public int getPointlistCount() {
                if (pointlistBuilder_ == null) {
                    return pointlist_.size();
                } else {
                    return pointlistBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public RIP_ANA_POINT getPointlist(int index) {
                if (pointlistBuilder_ == null) {
                    return pointlist_.get(index);
                } else {
                    return pointlistBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder setPointlist(
                    int index, RIP_ANA_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.set(index, value);
                    onChanged();
                } else {
                    pointlistBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder setPointlist(
                    int index, RIP_ANA_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(RIP_ANA_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.add(value);
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    int index, RIP_ANA_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.add(index, value);
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    RIP_ANA_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.add(builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    int index, RIP_ANA_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder addAllPointlist(
                    Iterable<? extends RIP_ANA_POINT> values) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    super.addAll(values, pointlist_);
                    onChanged();
                } else {
                    pointlistBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder clearPointlist() {
                if (pointlistBuilder_ == null) {
                    pointlist_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    pointlistBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public Builder removePointlist(int index) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.remove(index);
                    onChanged();
                } else {
                    pointlistBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public RIP_ANA_POINT.Builder getPointlistBuilder(
                    int index) {
                return getPointlistFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public RIP_ANA_POINTOrBuilder getPointlistOrBuilder(
                    int index) {
                if (pointlistBuilder_ == null) {
                    return pointlist_.get(index);  } else {
                    return pointlistBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public java.util.List<? extends RIP_ANA_POINTOrBuilder>
            getPointlistOrBuilderList() {
                if (pointlistBuilder_ != null) {
                    return pointlistBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(pointlist_);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public RIP_ANA_POINT.Builder addPointlistBuilder() {
                return getPointlistFieldBuilder().addBuilder(
                        RIP_ANA_POINT.getDefaultInstance());
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public RIP_ANA_POINT.Builder addPointlistBuilder(
                    int index) {
                return getPointlistFieldBuilder().addBuilder(
                        index, RIP_ANA_POINT.getDefaultInstance());
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ANA_POINT pointlist = 1;</code>
             */
            public java.util.List<RIP_ANA_POINT.Builder>
            getPointlistBuilderList() {
                return getPointlistFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    RIP_ANA_POINT, RIP_ANA_POINT.Builder, RIP_ANA_POINTOrBuilder>
            getPointlistFieldBuilder() {
                if (pointlistBuilder_ == null) {
                    pointlistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            RIP_ANA_POINT, RIP_ANA_POINT.Builder, RIP_ANA_POINTOrBuilder>(
                            pointlist_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    pointlist_ = null;
                }
                return pointlistBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:SSIP.DATA.RIP_ANA_LIST)
        }

        static {
            defaultInstance = new RIP_ANA_LIST(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SSIP.DATA.RIP_ANA_LIST)
    }

    public interface RIP_DIG_LISTOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        java.util.List<RIP_DIG_POINT>
        getPointlistList();
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        RIP_DIG_POINT getPointlist(int index);
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        int getPointlistCount();
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        java.util.List<? extends RIP_DIG_POINTOrBuilder>
        getPointlistOrBuilderList();
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        RIP_DIG_POINTOrBuilder getPointlistOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code SSIP.DATA.RIP_DIG_LIST}
     */
    public static final class RIP_DIG_LIST extends
            com.google.protobuf.GeneratedMessage
            implements RIP_DIG_LISTOrBuilder {
        // Use RIP_DIG_LIST.newBuilder() to construct.
        private RIP_DIG_LIST(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private RIP_DIG_LIST(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final RIP_DIG_LIST defaultInstance;
        public static RIP_DIG_LIST getDefaultInstance() {
            return defaultInstance;
        }

        public RIP_DIG_LIST getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RIP_DIG_LIST(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                pointlist_ = new java.util.ArrayList<RIP_DIG_POINT>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            pointlist_.add(input.readMessage(RIP_DIG_POINT.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    pointlist_ = java.util.Collections.unmodifiableList(pointlist_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmsData.internal_static_SSIP_DATA_RIP_DIG_LIST_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmsData.internal_static_SSIP_DATA_RIP_DIG_LIST_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RIP_DIG_LIST.class, Builder.class);
        }

        public static com.google.protobuf.Parser<RIP_DIG_LIST> PARSER =
                new com.google.protobuf.AbstractParser<RIP_DIG_LIST>() {
                    public RIP_DIG_LIST parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new RIP_DIG_LIST(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<RIP_DIG_LIST> getParserForType() {
            return PARSER;
        }

        // repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;
        public static final int POINTLIST_FIELD_NUMBER = 1;
        private java.util.List<RIP_DIG_POINT> pointlist_;
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        public java.util.List<RIP_DIG_POINT> getPointlistList() {
            return pointlist_;
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        public java.util.List<? extends RIP_DIG_POINTOrBuilder>
        getPointlistOrBuilderList() {
            return pointlist_;
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        public int getPointlistCount() {
            return pointlist_.size();
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        public RIP_DIG_POINT getPointlist(int index) {
            return pointlist_.get(index);
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
         */
        public RIP_DIG_POINTOrBuilder getPointlistOrBuilder(
                int index) {
            return pointlist_.get(index);
        }

        private void initFields() {
            pointlist_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < pointlist_.size(); i++) {
                output.writeMessage(1, pointlist_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < pointlist_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, pointlist_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static RIP_DIG_LIST parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_DIG_LIST parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_DIG_LIST parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_DIG_LIST parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_DIG_LIST parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_DIG_LIST parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static RIP_DIG_LIST parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static RIP_DIG_LIST parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static RIP_DIG_LIST parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_DIG_LIST parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(RIP_DIG_LIST prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SSIP.DATA.RIP_DIG_LIST}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements RIP_DIG_LISTOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmsData.internal_static_SSIP_DATA_RIP_DIG_LIST_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmsData.internal_static_SSIP_DATA_RIP_DIG_LIST_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RIP_DIG_LIST.class, Builder.class);
            }

            // Construct using SSIP.DATA.DmsData.RIP_DIG_LIST.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getPointlistFieldBuilder();
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (pointlistBuilder_ == null) {
                    pointlist_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    pointlistBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmsData.internal_static_SSIP_DATA_RIP_DIG_LIST_descriptor;
            }

            public RIP_DIG_LIST getDefaultInstanceForType() {
                return RIP_DIG_LIST.getDefaultInstance();
            }

            public RIP_DIG_LIST build() {
                RIP_DIG_LIST result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RIP_DIG_LIST buildPartial() {
                RIP_DIG_LIST result = new RIP_DIG_LIST(this);
                int from_bitField0_ = bitField0_;
                if (pointlistBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        pointlist_ = java.util.Collections.unmodifiableList(pointlist_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.pointlist_ = pointlist_;
                } else {
                    result.pointlist_ = pointlistBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RIP_DIG_LIST) {
                    return mergeFrom((RIP_DIG_LIST)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RIP_DIG_LIST other) {
                if (other == RIP_DIG_LIST.getDefaultInstance()) return this;
                if (pointlistBuilder_ == null) {
                    if (!other.pointlist_.isEmpty()) {
                        if (pointlist_.isEmpty()) {
                            pointlist_ = other.pointlist_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePointlistIsMutable();
                            pointlist_.addAll(other.pointlist_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.pointlist_.isEmpty()) {
                        if (pointlistBuilder_.isEmpty()) {
                            pointlistBuilder_.dispose();
                            pointlistBuilder_ = null;
                            pointlist_ = other.pointlist_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            pointlistBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getPointlistFieldBuilder() : null;
                        } else {
                            pointlistBuilder_.addAllMessages(other.pointlist_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RIP_DIG_LIST parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RIP_DIG_LIST) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;
            private java.util.List<RIP_DIG_POINT> pointlist_ =
                    java.util.Collections.emptyList();
            private void ensurePointlistIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    pointlist_ = new java.util.ArrayList<RIP_DIG_POINT>(pointlist_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    RIP_DIG_POINT, RIP_DIG_POINT.Builder, RIP_DIG_POINTOrBuilder> pointlistBuilder_;

            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public java.util.List<RIP_DIG_POINT> getPointlistList() {
                if (pointlistBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(pointlist_);
                } else {
                    return pointlistBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public int getPointlistCount() {
                if (pointlistBuilder_ == null) {
                    return pointlist_.size();
                } else {
                    return pointlistBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public RIP_DIG_POINT getPointlist(int index) {
                if (pointlistBuilder_ == null) {
                    return pointlist_.get(index);
                } else {
                    return pointlistBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder setPointlist(
                    int index, RIP_DIG_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.set(index, value);
                    onChanged();
                } else {
                    pointlistBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder setPointlist(
                    int index, RIP_DIG_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(RIP_DIG_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.add(value);
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    int index, RIP_DIG_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.add(index, value);
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    RIP_DIG_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.add(builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    int index, RIP_DIG_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder addAllPointlist(
                    Iterable<? extends RIP_DIG_POINT> values) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    super.addAll(values, pointlist_);
                    onChanged();
                } else {
                    pointlistBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder clearPointlist() {
                if (pointlistBuilder_ == null) {
                    pointlist_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    pointlistBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public Builder removePointlist(int index) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.remove(index);
                    onChanged();
                } else {
                    pointlistBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public RIP_DIG_POINT.Builder getPointlistBuilder(
                    int index) {
                return getPointlistFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public RIP_DIG_POINTOrBuilder getPointlistOrBuilder(
                    int index) {
                if (pointlistBuilder_ == null) {
                    return pointlist_.get(index);  } else {
                    return pointlistBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public java.util.List<? extends RIP_DIG_POINTOrBuilder>
            getPointlistOrBuilderList() {
                if (pointlistBuilder_ != null) {
                    return pointlistBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(pointlist_);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public RIP_DIG_POINT.Builder addPointlistBuilder() {
                return getPointlistFieldBuilder().addBuilder(
                        RIP_DIG_POINT.getDefaultInstance());
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public RIP_DIG_POINT.Builder addPointlistBuilder(
                    int index) {
                return getPointlistFieldBuilder().addBuilder(
                        index, RIP_DIG_POINT.getDefaultInstance());
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_DIG_POINT pointlist = 1;</code>
             */
            public java.util.List<RIP_DIG_POINT.Builder>
            getPointlistBuilderList() {
                return getPointlistFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    RIP_DIG_POINT, RIP_DIG_POINT.Builder, RIP_DIG_POINTOrBuilder>
            getPointlistFieldBuilder() {
                if (pointlistBuilder_ == null) {
                    pointlistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            RIP_DIG_POINT, RIP_DIG_POINT.Builder, RIP_DIG_POINTOrBuilder>(
                            pointlist_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    pointlist_ = null;
                }
                return pointlistBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:SSIP.DATA.RIP_DIG_LIST)
        }

        static {
            defaultInstance = new RIP_DIG_LIST(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SSIP.DATA.RIP_DIG_LIST)
    }

    public interface RIP_ACC_LISTOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        java.util.List<RIP_ACC_POINT>
        getPointlistList();
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        RIP_ACC_POINT getPointlist(int index);
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        int getPointlistCount();
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        java.util.List<? extends RIP_ACC_POINTOrBuilder>
        getPointlistOrBuilderList();
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        RIP_ACC_POINTOrBuilder getPointlistOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code SSIP.DATA.RIP_ACC_LIST}
     */
    public static final class RIP_ACC_LIST extends
            com.google.protobuf.GeneratedMessage
            implements RIP_ACC_LISTOrBuilder {
        // Use RIP_ACC_LIST.newBuilder() to construct.
        private RIP_ACC_LIST(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private RIP_ACC_LIST(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final RIP_ACC_LIST defaultInstance;
        public static RIP_ACC_LIST getDefaultInstance() {
            return defaultInstance;
        }

        public RIP_ACC_LIST getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RIP_ACC_LIST(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                pointlist_ = new java.util.ArrayList<RIP_ACC_POINT>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            pointlist_.add(input.readMessage(RIP_ACC_POINT.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    pointlist_ = java.util.Collections.unmodifiableList(pointlist_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmsData.internal_static_SSIP_DATA_RIP_ACC_LIST_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmsData.internal_static_SSIP_DATA_RIP_ACC_LIST_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RIP_ACC_LIST.class, Builder.class);
        }

        public static com.google.protobuf.Parser<RIP_ACC_LIST> PARSER =
                new com.google.protobuf.AbstractParser<RIP_ACC_LIST>() {
                    public RIP_ACC_LIST parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new RIP_ACC_LIST(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<RIP_ACC_LIST> getParserForType() {
            return PARSER;
        }

        // repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;
        public static final int POINTLIST_FIELD_NUMBER = 1;
        private java.util.List<RIP_ACC_POINT> pointlist_;
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        public java.util.List<RIP_ACC_POINT> getPointlistList() {
            return pointlist_;
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        public java.util.List<? extends RIP_ACC_POINTOrBuilder>
        getPointlistOrBuilderList() {
            return pointlist_;
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        public int getPointlistCount() {
            return pointlist_.size();
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        public RIP_ACC_POINT getPointlist(int index) {
            return pointlist_.get(index);
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
         */
        public RIP_ACC_POINTOrBuilder getPointlistOrBuilder(
                int index) {
            return pointlist_.get(index);
        }

        private void initFields() {
            pointlist_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < pointlist_.size(); i++) {
                output.writeMessage(1, pointlist_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < pointlist_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, pointlist_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static RIP_ACC_LIST parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_ACC_LIST parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_ACC_LIST parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_ACC_LIST parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_ACC_LIST parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_ACC_LIST parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static RIP_ACC_LIST parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static RIP_ACC_LIST parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static RIP_ACC_LIST parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_ACC_LIST parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(RIP_ACC_LIST prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SSIP.DATA.RIP_ACC_LIST}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements RIP_ACC_LISTOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmsData.internal_static_SSIP_DATA_RIP_ACC_LIST_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmsData.internal_static_SSIP_DATA_RIP_ACC_LIST_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RIP_ACC_LIST.class, Builder.class);
            }

            // Construct using SSIP.DATA.DmsData.RIP_ACC_LIST.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getPointlistFieldBuilder();
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (pointlistBuilder_ == null) {
                    pointlist_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    pointlistBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmsData.internal_static_SSIP_DATA_RIP_ACC_LIST_descriptor;
            }

            public RIP_ACC_LIST getDefaultInstanceForType() {
                return RIP_ACC_LIST.getDefaultInstance();
            }

            public RIP_ACC_LIST build() {
                RIP_ACC_LIST result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RIP_ACC_LIST buildPartial() {
                RIP_ACC_LIST result = new RIP_ACC_LIST(this);
                int from_bitField0_ = bitField0_;
                if (pointlistBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        pointlist_ = java.util.Collections.unmodifiableList(pointlist_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.pointlist_ = pointlist_;
                } else {
                    result.pointlist_ = pointlistBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RIP_ACC_LIST) {
                    return mergeFrom((RIP_ACC_LIST)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RIP_ACC_LIST other) {
                if (other == RIP_ACC_LIST.getDefaultInstance()) return this;
                if (pointlistBuilder_ == null) {
                    if (!other.pointlist_.isEmpty()) {
                        if (pointlist_.isEmpty()) {
                            pointlist_ = other.pointlist_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePointlistIsMutable();
                            pointlist_.addAll(other.pointlist_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.pointlist_.isEmpty()) {
                        if (pointlistBuilder_.isEmpty()) {
                            pointlistBuilder_.dispose();
                            pointlistBuilder_ = null;
                            pointlist_ = other.pointlist_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            pointlistBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getPointlistFieldBuilder() : null;
                        } else {
                            pointlistBuilder_.addAllMessages(other.pointlist_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RIP_ACC_LIST parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RIP_ACC_LIST) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;
            private java.util.List<RIP_ACC_POINT> pointlist_ =
                    java.util.Collections.emptyList();
            private void ensurePointlistIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    pointlist_ = new java.util.ArrayList<RIP_ACC_POINT>(pointlist_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    RIP_ACC_POINT, RIP_ACC_POINT.Builder, RIP_ACC_POINTOrBuilder> pointlistBuilder_;

            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public java.util.List<RIP_ACC_POINT> getPointlistList() {
                if (pointlistBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(pointlist_);
                } else {
                    return pointlistBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public int getPointlistCount() {
                if (pointlistBuilder_ == null) {
                    return pointlist_.size();
                } else {
                    return pointlistBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public RIP_ACC_POINT getPointlist(int index) {
                if (pointlistBuilder_ == null) {
                    return pointlist_.get(index);
                } else {
                    return pointlistBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder setPointlist(
                    int index, RIP_ACC_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.set(index, value);
                    onChanged();
                } else {
                    pointlistBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder setPointlist(
                    int index, RIP_ACC_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(RIP_ACC_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.add(value);
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    int index, RIP_ACC_POINT value) {
                if (pointlistBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointlistIsMutable();
                    pointlist_.add(index, value);
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    RIP_ACC_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.add(builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder addPointlist(
                    int index, RIP_ACC_POINT.Builder builderForValue) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    pointlistBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder addAllPointlist(
                    Iterable<? extends RIP_ACC_POINT> values) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    super.addAll(values, pointlist_);
                    onChanged();
                } else {
                    pointlistBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder clearPointlist() {
                if (pointlistBuilder_ == null) {
                    pointlist_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    pointlistBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public Builder removePointlist(int index) {
                if (pointlistBuilder_ == null) {
                    ensurePointlistIsMutable();
                    pointlist_.remove(index);
                    onChanged();
                } else {
                    pointlistBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public RIP_ACC_POINT.Builder getPointlistBuilder(
                    int index) {
                return getPointlistFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public RIP_ACC_POINTOrBuilder getPointlistOrBuilder(
                    int index) {
                if (pointlistBuilder_ == null) {
                    return pointlist_.get(index);  } else {
                    return pointlistBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public java.util.List<? extends RIP_ACC_POINTOrBuilder>
            getPointlistOrBuilderList() {
                if (pointlistBuilder_ != null) {
                    return pointlistBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(pointlist_);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public RIP_ACC_POINT.Builder addPointlistBuilder() {
                return getPointlistFieldBuilder().addBuilder(
                        RIP_ACC_POINT.getDefaultInstance());
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public RIP_ACC_POINT.Builder addPointlistBuilder(
                    int index) {
                return getPointlistFieldBuilder().addBuilder(
                        index, RIP_ACC_POINT.getDefaultInstance());
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_ACC_POINT pointlist = 1;</code>
             */
            public java.util.List<RIP_ACC_POINT.Builder>
            getPointlistBuilderList() {
                return getPointlistFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    RIP_ACC_POINT, RIP_ACC_POINT.Builder, RIP_ACC_POINTOrBuilder>
            getPointlistFieldBuilder() {
                if (pointlistBuilder_ == null) {
                    pointlistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            RIP_ACC_POINT, RIP_ACC_POINT.Builder, RIP_ACC_POINTOrBuilder>(
                            pointlist_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    pointlist_ = null;
                }
                return pointlistBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:SSIP.DATA.RIP_ACC_LIST)
        }

        static {
            defaultInstance = new RIP_ACC_LIST(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SSIP.DATA.RIP_ACC_LIST)
    }

    public interface RIP_CELL_VALUEOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional int32 index = 1;
        /**
         * <code>optional int32 index = 1;</code>
         */
        boolean hasIndex();
        /**
         * <code>optional int32 index = 1;</code>
         */
        int getIndex();

        // optional int32 type = 2;
        /**
         * <code>optional int32 type = 2;</code>
         */
        boolean hasType();
        /**
         * <code>optional int32 type = 2;</code>
         */
        int getType();

        // optional int32 len = 3;
        /**
         * <code>optional int32 len = 3;</code>
         */
        boolean hasLen();
        /**
         * <code>optional int32 len = 3;</code>
         */
        int getLen();

        // optional int32 ivalue = 4;
        /**
         * <code>optional int32 ivalue = 4;</code>
         */
        boolean hasIvalue();
        /**
         * <code>optional int32 ivalue = 4;</code>
         */
        int getIvalue();

        // optional float fvalue = 5;
        /**
         * <code>optional float fvalue = 5;</code>
         */
        boolean hasFvalue();
        /**
         * <code>optional float fvalue = 5;</code>
         */
        float getFvalue();

        // optional double dvalue = 6;
        /**
         * <code>optional double dvalue = 6;</code>
         */
        boolean hasDvalue();
        /**
         * <code>optional double dvalue = 6;</code>
         */
        double getDvalue();

        // optional bytes data = 7;
        /**
         * <code>optional bytes data = 7;</code>
         */
        boolean hasData();
        /**
         * <code>optional bytes data = 7;</code>
         */
        com.google.protobuf.ByteString getData();
    }
    /**
     * Protobuf type {@code SSIP.DATA.RIP_CELL_VALUE}
     */
    public static final class RIP_CELL_VALUE extends
            com.google.protobuf.GeneratedMessage
            implements RIP_CELL_VALUEOrBuilder {
        // Use RIP_CELL_VALUE.newBuilder() to construct.
        private RIP_CELL_VALUE(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private RIP_CELL_VALUE(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final RIP_CELL_VALUE defaultInstance;
        public static RIP_CELL_VALUE getDefaultInstance() {
            return defaultInstance;
        }

        public RIP_CELL_VALUE getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RIP_CELL_VALUE(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            index_ = input.readInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            type_ = input.readInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            len_ = input.readInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            ivalue_ = input.readInt32();
                            break;
                        }
                        case 45: {
                            bitField0_ |= 0x00000010;
                            fvalue_ = input.readFloat();
                            break;
                        }
                        case 49: {
                            bitField0_ |= 0x00000020;
                            dvalue_ = input.readDouble();
                            break;
                        }
                        case 58: {
                            bitField0_ |= 0x00000040;
                            data_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmsData.internal_static_SSIP_DATA_RIP_CELL_VALUE_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmsData.internal_static_SSIP_DATA_RIP_CELL_VALUE_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RIP_CELL_VALUE.class, Builder.class);
        }

        public static com.google.protobuf.Parser<RIP_CELL_VALUE> PARSER =
                new com.google.protobuf.AbstractParser<RIP_CELL_VALUE>() {
                    public RIP_CELL_VALUE parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new RIP_CELL_VALUE(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<RIP_CELL_VALUE> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional int32 index = 1;
        public static final int INDEX_FIELD_NUMBER = 1;
        private int index_;
        /**
         * <code>optional int32 index = 1;</code>
         */
        public boolean hasIndex() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 index = 1;</code>
         */
        public int getIndex() {
            return index_;
        }

        // optional int32 type = 2;
        public static final int TYPE_FIELD_NUMBER = 2;
        private int type_;
        /**
         * <code>optional int32 type = 2;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 type = 2;</code>
         */
        public int getType() {
            return type_;
        }

        // optional int32 len = 3;
        public static final int LEN_FIELD_NUMBER = 3;
        private int len_;
        /**
         * <code>optional int32 len = 3;</code>
         */
        public boolean hasLen() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 len = 3;</code>
         */
        public int getLen() {
            return len_;
        }

        // optional int32 ivalue = 4;
        public static final int IVALUE_FIELD_NUMBER = 4;
        private int ivalue_;
        /**
         * <code>optional int32 ivalue = 4;</code>
         */
        public boolean hasIvalue() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 ivalue = 4;</code>
         */
        public int getIvalue() {
            return ivalue_;
        }

        // optional float fvalue = 5;
        public static final int FVALUE_FIELD_NUMBER = 5;
        private float fvalue_;
        /**
         * <code>optional float fvalue = 5;</code>
         */
        public boolean hasFvalue() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float fvalue = 5;</code>
         */
        public float getFvalue() {
            return fvalue_;
        }

        // optional double dvalue = 6;
        public static final int DVALUE_FIELD_NUMBER = 6;
        private double dvalue_;
        /**
         * <code>optional double dvalue = 6;</code>
         */
        public boolean hasDvalue() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional double dvalue = 6;</code>
         */
        public double getDvalue() {
            return dvalue_;
        }

        // optional bytes data = 7;
        public static final int DATA_FIELD_NUMBER = 7;
        private com.google.protobuf.ByteString data_;
        /**
         * <code>optional bytes data = 7;</code>
         */
        public boolean hasData() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bytes data = 7;</code>
         */
        public com.google.protobuf.ByteString getData() {
            return data_;
        }

        private void initFields() {
            index_ = 0;
            type_ = 0;
            len_ = 0;
            ivalue_ = 0;
            fvalue_ = 0F;
            dvalue_ = 0D;
            data_ = com.google.protobuf.ByteString.EMPTY;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt32(1, index_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt32(2, type_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt32(3, len_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeInt32(4, ivalue_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeFloat(5, fvalue_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeDouble(6, dvalue_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeBytes(7, data_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, index_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, type_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(3, len_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(4, ivalue_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(5, fvalue_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(6, dvalue_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(7, data_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static RIP_CELL_VALUE parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_CELL_VALUE parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_CELL_VALUE parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_CELL_VALUE parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_CELL_VALUE parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_CELL_VALUE parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static RIP_CELL_VALUE parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static RIP_CELL_VALUE parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static RIP_CELL_VALUE parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_CELL_VALUE parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(RIP_CELL_VALUE prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SSIP.DATA.RIP_CELL_VALUE}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements RIP_CELL_VALUEOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmsData.internal_static_SSIP_DATA_RIP_CELL_VALUE_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmsData.internal_static_SSIP_DATA_RIP_CELL_VALUE_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RIP_CELL_VALUE.class, Builder.class);
            }

            // Construct using SSIP.DATA.DmsData.RIP_CELL_VALUE.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                index_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                type_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                len_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                ivalue_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                fvalue_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000010);
                dvalue_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000020);
                data_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmsData.internal_static_SSIP_DATA_RIP_CELL_VALUE_descriptor;
            }

            public RIP_CELL_VALUE getDefaultInstanceForType() {
                return RIP_CELL_VALUE.getDefaultInstance();
            }

            public RIP_CELL_VALUE build() {
                RIP_CELL_VALUE result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RIP_CELL_VALUE buildPartial() {
                RIP_CELL_VALUE result = new RIP_CELL_VALUE(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.index_ = index_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.type_ = type_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.len_ = len_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.ivalue_ = ivalue_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.fvalue_ = fvalue_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.dvalue_ = dvalue_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.data_ = data_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RIP_CELL_VALUE) {
                    return mergeFrom((RIP_CELL_VALUE)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RIP_CELL_VALUE other) {
                if (other == RIP_CELL_VALUE.getDefaultInstance()) return this;
                if (other.hasIndex()) {
                    setIndex(other.getIndex());
                }
                if (other.hasType()) {
                    setType(other.getType());
                }
                if (other.hasLen()) {
                    setLen(other.getLen());
                }
                if (other.hasIvalue()) {
                    setIvalue(other.getIvalue());
                }
                if (other.hasFvalue()) {
                    setFvalue(other.getFvalue());
                }
                if (other.hasDvalue()) {
                    setDvalue(other.getDvalue());
                }
                if (other.hasData()) {
                    setData(other.getData());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RIP_CELL_VALUE parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RIP_CELL_VALUE) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // optional int32 index = 1;
            private int index_ ;
            /**
             * <code>optional int32 index = 1;</code>
             */
            public boolean hasIndex() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional int32 index = 1;</code>
             */
            public int getIndex() {
                return index_;
            }
            /**
             * <code>optional int32 index = 1;</code>
             */
            public Builder setIndex(int value) {
                bitField0_ |= 0x00000001;
                index_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 index = 1;</code>
             */
            public Builder clearIndex() {
                bitField0_ = (bitField0_ & ~0x00000001);
                index_ = 0;
                onChanged();
                return this;
            }

            // optional int32 type = 2;
            private int type_ ;
            /**
             * <code>optional int32 type = 2;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional int32 type = 2;</code>
             */
            public int getType() {
                return type_;
            }
            /**
             * <code>optional int32 type = 2;</code>
             */
            public Builder setType(int value) {
                bitField0_ |= 0x00000002;
                type_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 type = 2;</code>
             */
            public Builder clearType() {
                bitField0_ = (bitField0_ & ~0x00000002);
                type_ = 0;
                onChanged();
                return this;
            }

            // optional int32 len = 3;
            private int len_ ;
            /**
             * <code>optional int32 len = 3;</code>
             */
            public boolean hasLen() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional int32 len = 3;</code>
             */
            public int getLen() {
                return len_;
            }
            /**
             * <code>optional int32 len = 3;</code>
             */
            public Builder setLen(int value) {
                bitField0_ |= 0x00000004;
                len_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 len = 3;</code>
             */
            public Builder clearLen() {
                bitField0_ = (bitField0_ & ~0x00000004);
                len_ = 0;
                onChanged();
                return this;
            }

            // optional int32 ivalue = 4;
            private int ivalue_ ;
            /**
             * <code>optional int32 ivalue = 4;</code>
             */
            public boolean hasIvalue() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional int32 ivalue = 4;</code>
             */
            public int getIvalue() {
                return ivalue_;
            }
            /**
             * <code>optional int32 ivalue = 4;</code>
             */
            public Builder setIvalue(int value) {
                bitField0_ |= 0x00000008;
                ivalue_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 ivalue = 4;</code>
             */
            public Builder clearIvalue() {
                bitField0_ = (bitField0_ & ~0x00000008);
                ivalue_ = 0;
                onChanged();
                return this;
            }

            // optional float fvalue = 5;
            private float fvalue_ ;
            /**
             * <code>optional float fvalue = 5;</code>
             */
            public boolean hasFvalue() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional float fvalue = 5;</code>
             */
            public float getFvalue() {
                return fvalue_;
            }
            /**
             * <code>optional float fvalue = 5;</code>
             */
            public Builder setFvalue(float value) {
                bitField0_ |= 0x00000010;
                fvalue_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional float fvalue = 5;</code>
             */
            public Builder clearFvalue() {
                bitField0_ = (bitField0_ & ~0x00000010);
                fvalue_ = 0F;
                onChanged();
                return this;
            }

            // optional double dvalue = 6;
            private double dvalue_ ;
            /**
             * <code>optional double dvalue = 6;</code>
             */
            public boolean hasDvalue() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }
            /**
             * <code>optional double dvalue = 6;</code>
             */
            public double getDvalue() {
                return dvalue_;
            }
            /**
             * <code>optional double dvalue = 6;</code>
             */
            public Builder setDvalue(double value) {
                bitField0_ |= 0x00000020;
                dvalue_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional double dvalue = 6;</code>
             */
            public Builder clearDvalue() {
                bitField0_ = (bitField0_ & ~0x00000020);
                dvalue_ = 0D;
                onChanged();
                return this;
            }

            // optional bytes data = 7;
            private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>optional bytes data = 7;</code>
             */
            public boolean hasData() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }
            /**
             * <code>optional bytes data = 7;</code>
             */
            public com.google.protobuf.ByteString getData() {
                return data_;
            }
            /**
             * <code>optional bytes data = 7;</code>
             */
            public Builder setData(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                data_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional bytes data = 7;</code>
             */
            public Builder clearData() {
                bitField0_ = (bitField0_ & ~0x00000040);
                data_ = getDefaultInstance().getData();
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:SSIP.DATA.RIP_CELL_VALUE)
        }

        static {
            defaultInstance = new RIP_CELL_VALUE(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SSIP.DATA.RIP_CELL_VALUE)
    }

    public interface RIP_GRID_VALUEOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional int32 subscribeno = 1;
        /**
         * <code>optional int32 subscribeno = 1;</code>
         */
        boolean hasSubscribeno();
        /**
         * <code>optional int32 subscribeno = 1;</code>
         */
        int getSubscribeno();

        // repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        java.util.List<RIP_CELL_VALUE>
        getDataSetList();
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        RIP_CELL_VALUE getDataSet(int index);
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        int getDataSetCount();
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        java.util.List<? extends RIP_CELL_VALUEOrBuilder>
        getDataSetOrBuilderList();
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        RIP_CELL_VALUEOrBuilder getDataSetOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code SSIP.DATA.RIP_GRID_VALUE}
     */
    public static final class RIP_GRID_VALUE extends
            com.google.protobuf.GeneratedMessage
            implements RIP_GRID_VALUEOrBuilder {
        // Use RIP_GRID_VALUE.newBuilder() to construct.
        private RIP_GRID_VALUE(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private RIP_GRID_VALUE(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final RIP_GRID_VALUE defaultInstance;
        public static RIP_GRID_VALUE getDefaultInstance() {
            return defaultInstance;
        }

        public RIP_GRID_VALUE getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private RIP_GRID_VALUE(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            subscribeno_ = input.readInt32();
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                dataSet_ = new java.util.ArrayList<RIP_CELL_VALUE>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            dataSet_.add(input.readMessage(RIP_CELL_VALUE.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    dataSet_ = java.util.Collections.unmodifiableList(dataSet_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmsData.internal_static_SSIP_DATA_RIP_GRID_VALUE_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmsData.internal_static_SSIP_DATA_RIP_GRID_VALUE_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            RIP_GRID_VALUE.class, Builder.class);
        }

        public static com.google.protobuf.Parser<RIP_GRID_VALUE> PARSER =
                new com.google.protobuf.AbstractParser<RIP_GRID_VALUE>() {
                    public RIP_GRID_VALUE parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new RIP_GRID_VALUE(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<RIP_GRID_VALUE> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional int32 subscribeno = 1;
        public static final int SUBSCRIBENO_FIELD_NUMBER = 1;
        private int subscribeno_;
        /**
         * <code>optional int32 subscribeno = 1;</code>
         */
        public boolean hasSubscribeno() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 subscribeno = 1;</code>
         */
        public int getSubscribeno() {
            return subscribeno_;
        }

        // repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;
        public static final int DATA_SET_FIELD_NUMBER = 2;
        private java.util.List<RIP_CELL_VALUE> dataSet_;
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        public java.util.List<RIP_CELL_VALUE> getDataSetList() {
            return dataSet_;
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        public java.util.List<? extends RIP_CELL_VALUEOrBuilder>
        getDataSetOrBuilderList() {
            return dataSet_;
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        public int getDataSetCount() {
            return dataSet_.size();
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        public RIP_CELL_VALUE getDataSet(int index) {
            return dataSet_.get(index);
        }
        /**
         * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
         */
        public RIP_CELL_VALUEOrBuilder getDataSetOrBuilder(
                int index) {
            return dataSet_.get(index);
        }

        private void initFields() {
            subscribeno_ = 0;
            dataSet_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt32(1, subscribeno_);
            }
            for (int i = 0; i < dataSet_.size(); i++) {
                output.writeMessage(2, dataSet_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, subscribeno_);
            }
            for (int i = 0; i < dataSet_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, dataSet_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static RIP_GRID_VALUE parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_GRID_VALUE parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_GRID_VALUE parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static RIP_GRID_VALUE parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static RIP_GRID_VALUE parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_GRID_VALUE parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static RIP_GRID_VALUE parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static RIP_GRID_VALUE parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static RIP_GRID_VALUE parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static RIP_GRID_VALUE parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(RIP_GRID_VALUE prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SSIP.DATA.RIP_GRID_VALUE}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements RIP_GRID_VALUEOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmsData.internal_static_SSIP_DATA_RIP_GRID_VALUE_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmsData.internal_static_SSIP_DATA_RIP_GRID_VALUE_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                RIP_GRID_VALUE.class, Builder.class);
            }

            // Construct using SSIP.DATA.DmsData.RIP_GRID_VALUE.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getDataSetFieldBuilder();
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                subscribeno_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                if (dataSetBuilder_ == null) {
                    dataSet_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    dataSetBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmsData.internal_static_SSIP_DATA_RIP_GRID_VALUE_descriptor;
            }

            public RIP_GRID_VALUE getDefaultInstanceForType() {
                return RIP_GRID_VALUE.getDefaultInstance();
            }

            public RIP_GRID_VALUE build() {
                RIP_GRID_VALUE result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public RIP_GRID_VALUE buildPartial() {
                RIP_GRID_VALUE result = new RIP_GRID_VALUE(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.subscribeno_ = subscribeno_;
                if (dataSetBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        dataSet_ = java.util.Collections.unmodifiableList(dataSet_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.dataSet_ = dataSet_;
                } else {
                    result.dataSet_ = dataSetBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof RIP_GRID_VALUE) {
                    return mergeFrom((RIP_GRID_VALUE)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(RIP_GRID_VALUE other) {
                if (other == RIP_GRID_VALUE.getDefaultInstance()) return this;
                if (other.hasSubscribeno()) {
                    setSubscribeno(other.getSubscribeno());
                }
                if (dataSetBuilder_ == null) {
                    if (!other.dataSet_.isEmpty()) {
                        if (dataSet_.isEmpty()) {
                            dataSet_ = other.dataSet_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureDataSetIsMutable();
                            dataSet_.addAll(other.dataSet_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.dataSet_.isEmpty()) {
                        if (dataSetBuilder_.isEmpty()) {
                            dataSetBuilder_.dispose();
                            dataSetBuilder_ = null;
                            dataSet_ = other.dataSet_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            dataSetBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getDataSetFieldBuilder() : null;
                        } else {
                            dataSetBuilder_.addAllMessages(other.dataSet_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                RIP_GRID_VALUE parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (RIP_GRID_VALUE) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // optional int32 subscribeno = 1;
            private int subscribeno_ ;
            /**
             * <code>optional int32 subscribeno = 1;</code>
             */
            public boolean hasSubscribeno() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional int32 subscribeno = 1;</code>
             */
            public int getSubscribeno() {
                return subscribeno_;
            }
            /**
             * <code>optional int32 subscribeno = 1;</code>
             */
            public Builder setSubscribeno(int value) {
                bitField0_ |= 0x00000001;
                subscribeno_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional int32 subscribeno = 1;</code>
             */
            public Builder clearSubscribeno() {
                bitField0_ = (bitField0_ & ~0x00000001);
                subscribeno_ = 0;
                onChanged();
                return this;
            }

            // repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;
            private java.util.List<RIP_CELL_VALUE> dataSet_ =
                    java.util.Collections.emptyList();
            private void ensureDataSetIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    dataSet_ = new java.util.ArrayList<RIP_CELL_VALUE>(dataSet_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    RIP_CELL_VALUE, RIP_CELL_VALUE.Builder, RIP_CELL_VALUEOrBuilder> dataSetBuilder_;

            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public java.util.List<RIP_CELL_VALUE> getDataSetList() {
                if (dataSetBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(dataSet_);
                } else {
                    return dataSetBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public int getDataSetCount() {
                if (dataSetBuilder_ == null) {
                    return dataSet_.size();
                } else {
                    return dataSetBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public RIP_CELL_VALUE getDataSet(int index) {
                if (dataSetBuilder_ == null) {
                    return dataSet_.get(index);
                } else {
                    return dataSetBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder setDataSet(
                    int index, RIP_CELL_VALUE value) {
                if (dataSetBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDataSetIsMutable();
                    dataSet_.set(index, value);
                    onChanged();
                } else {
                    dataSetBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder setDataSet(
                    int index, RIP_CELL_VALUE.Builder builderForValue) {
                if (dataSetBuilder_ == null) {
                    ensureDataSetIsMutable();
                    dataSet_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    dataSetBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder addDataSet(RIP_CELL_VALUE value) {
                if (dataSetBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDataSetIsMutable();
                    dataSet_.add(value);
                    onChanged();
                } else {
                    dataSetBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder addDataSet(
                    int index, RIP_CELL_VALUE value) {
                if (dataSetBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDataSetIsMutable();
                    dataSet_.add(index, value);
                    onChanged();
                } else {
                    dataSetBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder addDataSet(
                    RIP_CELL_VALUE.Builder builderForValue) {
                if (dataSetBuilder_ == null) {
                    ensureDataSetIsMutable();
                    dataSet_.add(builderForValue.build());
                    onChanged();
                } else {
                    dataSetBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder addDataSet(
                    int index, RIP_CELL_VALUE.Builder builderForValue) {
                if (dataSetBuilder_ == null) {
                    ensureDataSetIsMutable();
                    dataSet_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    dataSetBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder addAllDataSet(
                    Iterable<? extends RIP_CELL_VALUE> values) {
                if (dataSetBuilder_ == null) {
                    ensureDataSetIsMutable();
                    super.addAll(values, dataSet_);
                    onChanged();
                } else {
                    dataSetBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder clearDataSet() {
                if (dataSetBuilder_ == null) {
                    dataSet_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    dataSetBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public Builder removeDataSet(int index) {
                if (dataSetBuilder_ == null) {
                    ensureDataSetIsMutable();
                    dataSet_.remove(index);
                    onChanged();
                } else {
                    dataSetBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public RIP_CELL_VALUE.Builder getDataSetBuilder(
                    int index) {
                return getDataSetFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public RIP_CELL_VALUEOrBuilder getDataSetOrBuilder(
                    int index) {
                if (dataSetBuilder_ == null) {
                    return dataSet_.get(index);  } else {
                    return dataSetBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public java.util.List<? extends RIP_CELL_VALUEOrBuilder>
            getDataSetOrBuilderList() {
                if (dataSetBuilder_ != null) {
                    return dataSetBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(dataSet_);
                }
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public RIP_CELL_VALUE.Builder addDataSetBuilder() {
                return getDataSetFieldBuilder().addBuilder(
                        RIP_CELL_VALUE.getDefaultInstance());
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public RIP_CELL_VALUE.Builder addDataSetBuilder(
                    int index) {
                return getDataSetFieldBuilder().addBuilder(
                        index, RIP_CELL_VALUE.getDefaultInstance());
            }
            /**
             * <code>repeated .SSIP.DATA.RIP_CELL_VALUE data_set = 2;</code>
             */
            public java.util.List<RIP_CELL_VALUE.Builder>
            getDataSetBuilderList() {
                return getDataSetFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    RIP_CELL_VALUE, RIP_CELL_VALUE.Builder, RIP_CELL_VALUEOrBuilder>
            getDataSetFieldBuilder() {
                if (dataSetBuilder_ == null) {
                    dataSetBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            RIP_CELL_VALUE, RIP_CELL_VALUE.Builder, RIP_CELL_VALUEOrBuilder>(
                            dataSet_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    dataSet_ = null;
                }
                return dataSetBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:SSIP.DATA.RIP_GRID_VALUE)
        }

        static {
            defaultInstance = new RIP_GRID_VALUE(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SSIP.DATA.RIP_GRID_VALUE)
    }

    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SSIP_DATA_RIP_ANA_POINT_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SSIP_DATA_RIP_ANA_POINT_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SSIP_DATA_RIP_DIG_POINT_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SSIP_DATA_RIP_DIG_POINT_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SSIP_DATA_RIP_ACC_POINT_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SSIP_DATA_RIP_ACC_POINT_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SSIP_DATA_RIP_ANA_LIST_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SSIP_DATA_RIP_ANA_LIST_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SSIP_DATA_RIP_DIG_LIST_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SSIP_DATA_RIP_DIG_LIST_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SSIP_DATA_RIP_ACC_LIST_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SSIP_DATA_RIP_ACC_LIST_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SSIP_DATA_RIP_CELL_VALUE_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SSIP_DATA_RIP_CELL_VALUE_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SSIP_DATA_RIP_GRID_VALUE_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SSIP_DATA_RIP_GRID_VALUE_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        String[] descriptorData = {
                "\n\016dms_data.proto\022\tSSIP.DATA\"O\n\rRIP_ANA_P" +
                        "OINT\022\r\n\005rtuno\030\001 \001(\005\022\017\n\007pointno\030\002 \001(\005\022\r\n\005" +
                        "value\030\003 \001(\002\022\017\n\007quality\030\004 \001(\005\"O\n\rRIP_DIG_" +
                        "POINT\022\r\n\005rtuno\030\001 \001(\005\022\017\n\007pointno\030\002 \001(\005\022\r\n" +
                        "\005value\030\003 \001(\005\022\017\n\007quality\030\004 \001(\005\"O\n\rRIP_ACC" +
                        "_POINT\022\r\n\005rtuno\030\001 \001(\005\022\017\n\007pointno\030\002 \001(\005\022\r" +
                        "\n\005value\030\003 \001(\005\022\017\n\007quality\030\004 \001(\005\";\n\014RIP_AN" +
                        "A_LIST\022+\n\tpointlist\030\001 \003(\0132\030.SSIP.DATA.RI" +
                        "P_ANA_POINT\";\n\014RIP_DIG_LIST\022+\n\tpointlist" +
                        "\030\001 \003(\0132\030.SSIP.DATA.RIP_DIG_POINT\";\n\014RIP_",
                "ACC_LIST\022+\n\tpointlist\030\001 \003(\0132\030.SSIP.DATA." +
                        "RIP_ACC_POINT\"x\n\016RIP_CELL_VALUE\022\r\n\005index" +
                        "\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\022\013\n\003len\030\003 \001(\005\022\016\n\006iva" +
                        "lue\030\004 \001(\005\022\016\n\006fvalue\030\005 \001(\002\022\016\n\006dvalue\030\006 \001(" +
                        "\001\022\014\n\004data\030\007 \001(\014\"R\n\016RIP_GRID_VALUE\022\023\n\013sub" +
                        "scribeno\030\001 \001(\005\022+\n\010data_set\030\002 \003(\0132\031.SSIP." +
                        "DATA.RIP_CELL_VALUE"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_SSIP_DATA_RIP_ANA_POINT_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_SSIP_DATA_RIP_ANA_POINT_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SSIP_DATA_RIP_ANA_POINT_descriptor,
                                new String[] { "Rtuno", "Pointno", "Value", "Quality", });
                        internal_static_SSIP_DATA_RIP_DIG_POINT_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_SSIP_DATA_RIP_DIG_POINT_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SSIP_DATA_RIP_DIG_POINT_descriptor,
                                new String[] { "Rtuno", "Pointno", "Value", "Quality", });
                        internal_static_SSIP_DATA_RIP_ACC_POINT_descriptor =
                                getDescriptor().getMessageTypes().get(2);
                        internal_static_SSIP_DATA_RIP_ACC_POINT_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SSIP_DATA_RIP_ACC_POINT_descriptor,
                                new String[] { "Rtuno", "Pointno", "Value", "Quality", });
                        internal_static_SSIP_DATA_RIP_ANA_LIST_descriptor =
                                getDescriptor().getMessageTypes().get(3);
                        internal_static_SSIP_DATA_RIP_ANA_LIST_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SSIP_DATA_RIP_ANA_LIST_descriptor,
                                new String[] { "Pointlist", });
                        internal_static_SSIP_DATA_RIP_DIG_LIST_descriptor =
                                getDescriptor().getMessageTypes().get(4);
                        internal_static_SSIP_DATA_RIP_DIG_LIST_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SSIP_DATA_RIP_DIG_LIST_descriptor,
                                new String[] { "Pointlist", });
                        internal_static_SSIP_DATA_RIP_ACC_LIST_descriptor =
                                getDescriptor().getMessageTypes().get(5);
                        internal_static_SSIP_DATA_RIP_ACC_LIST_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SSIP_DATA_RIP_ACC_LIST_descriptor,
                                new String[] { "Pointlist", });
                        internal_static_SSIP_DATA_RIP_CELL_VALUE_descriptor =
                                getDescriptor().getMessageTypes().get(6);
                        internal_static_SSIP_DATA_RIP_CELL_VALUE_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SSIP_DATA_RIP_CELL_VALUE_descriptor,
                                new String[] { "Index", "Type", "Len", "Ivalue", "Fvalue", "Dvalue", "Data", });
                        internal_static_SSIP_DATA_RIP_GRID_VALUE_descriptor =
                                getDescriptor().getMessageTypes().get(7);
                        internal_static_SSIP_DATA_RIP_GRID_VALUE_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SSIP_DATA_RIP_GRID_VALUE_descriptor,
                                new String[] { "Subscribeno", "DataSet", });
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                        }, assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
